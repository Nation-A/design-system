name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Create .npmrc
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Build packages
        run: pnpm build

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_NPM_RELEASE_KEY }}
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      # Commit all changed files back to the repository
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: '[Automation] released to npm with new version'

      # 🔥 새로운 버전이 배포된 경우에만 Slack 알림 전송
      - name: Send Slack NPM Release Notification
        if: steps.changesets.outputs.published == 'true'
        run: |
          PACKAGES=$(echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -r 'map("\(.name)@\(.version)") | join(", ")')
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"🚀 NDS: New NPM Version Released! \n📦 Published Packages: ${PACKAGES}\",
            \"username\": \"NDS Npm Release Alert Bot\",
            \"icon_emoji\": \":rocket:\"
          }" $SLACK_WEBHOOK_URL
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
